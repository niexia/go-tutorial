import{_ as t,c as a,o as n,d as s}from"./app.40baa83a.js";const e='{"title":"运算符","description":"","frontmatter":{},"headers":[{"level":2,"title":"算术运算符","slug":"算术运算符"},{"level":2,"title":"比较运算符","slug":"比较运算符"},{"level":2,"title":"比较数组","slug":"比较数组"},{"level":2,"title":"逻辑运算符","slug":"逻辑运算符"},{"level":2,"title":"位运算符","slug":"位运算符"}],"relativePath":"guide/基本程序结构/运算符.md","lastUpdated":1632151317088}',p={},l=[s('<h1 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-hidden="true">#</a></h1><h2 id="算术运算符" tabindex="-1">算术运算符 <a class="header-anchor" href="#算术运算符" aria-hidden="true">#</a></h2><p>a = 1, b = 2</p><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:right;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:center;">+</td><td style="text-align:right;">相加</td><td style="text-align:left;">a + b = 3</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:right;">相减</td><td style="text-align:left;">a - b = -1</td></tr><tr><td style="text-align:center;">*</td><td style="text-align:right;">相乘</td><td style="text-align:left;">a * b = 2</td></tr><tr><td style="text-align:center;">/</td><td style="text-align:right;">相除</td><td style="text-align:left;">a / b = 0.5</td></tr><tr><td style="text-align:center;">%</td><td style="text-align:right;">求余</td><td style="text-align:left;">a % b = 1</td></tr><tr><td style="text-align:center;">++</td><td style="text-align:right;">自增</td><td style="text-align:left;">a++ 结果 2</td></tr><tr><td style="text-align:center;">--</td><td style="text-align:right;">自减</td><td style="text-align:left;">a-- 结果 0</td></tr></tbody></table><p><strong>Go 没有前置的 ++、--</strong></p><h2 id="比较运算符" tabindex="-1">比较运算符 <a class="header-anchor" href="#比较运算符" aria-hidden="true">#</a></h2><p>A = 0, B = 1</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>==</td><td>检查两个值是否相等，如果相等返回 true，否则返回 false</td><td>(A==b) 为 false</td></tr><tr><td>!=</td><td>检查两个值是否不相等，如果不相等返回 true，否则返回 false</td><td>(A!=B) 为 true</td></tr><tr><td>&gt;</td><td>检查左边值是否大于右边值，如果是返回 true 否则返回 false</td><td>(A&gt;B) 为 false</td></tr><tr><td>&lt;</td><td>检查左边值是否小于右边值，如果是返回 true 否则返回 false</td><td>(A&lt;B) 为 true</td></tr><tr><td>&gt;=</td><td>检查左边值是否大于等于右边值，如果是返回 true 否则返回 false</td><td>(A&gt;=B) 为 false</td></tr><tr><td>&lt;=</td><td>检查左边值是否小于等于右边值，如果是返回 true 否则返回 false</td><td>(A&lt;=B) 为 true</td></tr></tbody></table><h2 id="比较数组" tabindex="-1">比较数组 <a class="header-anchor" href="#比较数组" aria-hidden="true">#</a></h2><p>用 <code>==</code> 比较数组</p><ul><li>相同维数且含有相同个数元素的数组才可以比较</li><li>没给元素相同才相等</li></ul><div class="language-go"><pre><code><span class="token keyword">func</span> <span class="token function">TestCompareArray</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\ta <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span>\n\tb <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>\n\t<span class="token comment">// c := [...]int{1, 2, 3, 4, 5}</span>\n\td <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span>\n\tt<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span>\n\t<span class="token comment">// t.Log(a == c) // invalid operation: a == c (mismatched types [4]int and [5]int)</span>\n\tt<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>a <span class="token operator">==</span> d<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a></h2><p>和其他语言一直</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>逻辑 AND，如果两边的操作数都是 true，返回 true，否则返回 false</td><td>(A &amp;&amp; b) 为 false</td></tr><tr><td></td><td></td><td></td></tr><tr><td>!</td><td>逻辑 NOT，如果条件为 True，则逻辑 NOT 返回 false 否则返回 false</td><td>!(A &amp;&amp; B) 为 true</td></tr></tbody></table><h2 id="位运算符" tabindex="-1">位运算符 <a class="header-anchor" href="#位运算符" aria-hidden="true">#</a></h2><p>与其他语言的差异</p><ul><li>&amp;^ 按位清零：右边为 1，左边是什么都会置为 0；右边为 0，左边是什么就是什么</li></ul><div class="language-go"><pre><code><span class="token number">1</span> <span class="token operator">&amp;^</span> <span class="token number">0</span>  <span class="token operator">--</span> <span class="token number">1</span>\n<span class="token number">1</span> <span class="token operator">&amp;^</span> <span class="token number">1</span>  <span class="token operator">--</span> <span class="token number">0</span>\n<span class="token number">0</span> <span class="token operator">&amp;^</span> <span class="token number">1</span>  <span class="token operator">--</span> <span class="token number">0</span>\n<span class="token number">0</span> <span class="token operator">&amp;^</span> <span class="token number">0</span>  <span class="token operator">--</span> <span class="token number">0</span>\n</code></pre></div>',19)];var o=t(p,[["render",function(t,s,e,p,o,r){return n(),a("div",null,l)}]]);export{e as __pageData,o as default};
