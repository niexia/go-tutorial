import{_ as n,c as s,o as a,d as t}from"./app.ab67f476.js";const p='{"title":"可变参数和defer","description":"","frontmatter":{},"headers":[{"level":2,"title":"可变参数","slug":"可变参数"},{"level":2,"title":"defer 函数","slug":"defer-函数"}],"relativePath":"guide/函数/可变参数和defer.md","lastUpdated":1632207195116}',o={},e=[t('<h1 id="可变参数和defer" tabindex="-1">可变参数和defer <a class="header-anchor" href="#可变参数和defer" aria-hidden="true">#</a></h1><h2 id="可变参数" tabindex="-1">可变参数 <a class="header-anchor" href="#可变参数" aria-hidden="true">#</a></h2><div class="language-go"><pre><code><span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span>ops <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>\n  s <span class="token operator">:=</span> <span class="token number">0</span>\n  <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> op <span class="token operator">:=</span> <span class="token keyword">range</span> ops <span class="token punctuation">{</span>\n    s <span class="token operator">+=</span> op\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> s\n<span class="token punctuation">}</span>\n</code></pre></div><p>看起来和 js 的 rest 参数很类似，看个 🌰</p><div class="language-go"><pre><code><span class="token keyword">func</span> <span class="token function">Sum</span><span class="token punctuation">(</span>ops <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>\n\ts <span class="token operator">:=</span> <span class="token number">0</span>\n\t<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> op <span class="token operator">:=</span> <span class="token keyword">range</span> ops <span class="token punctuation">{</span>\n\t\ts <span class="token operator">+=</span> op\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">return</span> s\n<span class="token punctuation">}</span>\n\n<span class="token keyword">func</span> <span class="token function">TestVarParam</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tt<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\tt<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="defer-函数" tabindex="-1">defer 函数 <a class="header-anchor" href="#defer-函数" aria-hidden="true">#</a></h2><p>这是一个延迟执行函数，函数返回前才执行，<strong>一般可以用来清理资源或者某些锁</strong>。即便在 <code>panic</code> 调用之后，依然会执行。</p><div class="language-go"><pre><code><span class="token keyword">func</span> <span class="token function">TestDefer</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    t<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&quot;Clear resources&quot;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  t<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&quot;Started&quot;</span><span class="token punctuation">)</span>\n  <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;fatal error&quot;</span><span class="token punctuation">)</span> <span class="token comment">// defer 仍会执行</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',8)];var c=n(o,[["render",function(n,t,p,o,c,u){return a(),s("div",null,e)}]]);export{p as __pageData,c as default};
