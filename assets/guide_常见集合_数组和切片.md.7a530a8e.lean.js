import{_ as n,c as s,o as a,a as t,b as o}from"./app.202eef8d.js";const c='{"title":"数组和切片","description":"","frontmatter":{},"headers":[{"level":2,"title":"数组","slug":"数组"},{"level":3,"title":"数组的声明","slug":"数组的声明"},{"level":3,"title":"数组元素的遍历","slug":"数组元素的遍历"},{"level":3,"title":"数组截取","slug":"数组截取"},{"level":2,"title":"切片","slug":"切片"},{"level":3,"title":"内部结构","slug":"内部结构"},{"level":3,"title":"切片的可变长","slug":"切片的可变长"},{"level":3,"title":"切片共享存储结构","slug":"切片共享存储结构"},{"level":2,"title":"数组和切片的区别","slug":"数组和切片的区别"}],"relativePath":"guide/常见集合/数组和切片.md","lastUpdated":1632212524969}',p={},e=[t("h1",{id:"数组和切片",tabindex:"-1"},[o("数组和切片 "),t("a",{class:"header-anchor",href:"#数组和切片","aria-hidden":"true"},"#")],-1),t("p",null,"接下来看一些数据集合。",-1),t("h2",{id:"数组",tabindex:"-1"},[o("数组 "),t("a",{class:"header-anchor",href:"#数组","aria-hidden":"true"},"#")],-1),t("h3",{id:"数组的声明",tabindex:"-1"},[o("数组的声明 "),t("a",{class:"header-anchor",href:"#数组的声明","aria-hidden":"true"},"#")],-1),t("div",{class:"language-go"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"var"),o(" a "),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),o(),t("span",{class:"token comment"},"// 声明并初始化为默认零值"),o("\na"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},"]"),o(),t("span",{class:"token operator"},"="),o(),t("span",{class:"token number"},"1"),o("\n\nb "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},"}"),o(),t("span",{class:"token comment"},"// 声明同时初始化"),o("\nc "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token punctuation"},"{"),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"4"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},"}"),o(),t("span",{class:"token comment"},"// 多维数组初始化"),o("\n")])])],-1),t("p",null,[t("code",null,"[3]int{1, 2, 3}")],-1),t("ul",null,[t("li",null,"[3] 数组的大小"),t("li",null,"int 数组类型"),t("li",null,"{1,2,3} 初始化值，默认都是 0")],-1),t("p",null,[o("有时候如果不想挨个去数有多少个元素，可以写成 "),t("code",null,"[...]int{1, 2, 3}"),o(" 会自动根据初始化的参数长度设置数组大小。")],-1),t("h3",{id:"数组元素的遍历",tabindex:"-1"},[o("数组元素的遍历 "),t("a",{class:"header-anchor",href:"#数组元素的遍历","aria-hidden":"true"},"#")],-1),t("p",null,"与其他主要编程语言的差异",-1),t("div",{class:"language-go"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"func"),o(),t("span",{class:"token function"},"TestTravelArray"),t("span",{class:"token punctuation"},"("),o("t "),t("span",{class:"token operator"},"*"),o("testing"),t("span",{class:"token punctuation"},"."),o("T"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),o("\n  arr "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token punctuation"},"["),t("span",{class:"token operator"},"..."),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"4"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"5"),t("span",{class:"token punctuation"},"}"),o(),t("span",{class:"token comment"},"// 不指定元素个数"),o("\n  "),t("span",{class:"token comment"},"// 传统方式"),o("\n  "),t("span",{class:"token keyword"},"for"),o(" i "),t("span",{class:"token operator"},":="),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},";"),o(" i "),t("span",{class:"token operator"},"<"),o(),t("span",{class:"token function"},"len"),t("span",{class:"token punctuation"},"("),o("arr"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o(" i"),t("span",{class:"token operator"},"++"),o(),t("span",{class:"token punctuation"},"{"),o("\n    t"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),o("arr"),t("span",{class:"token punctuation"},"["),o("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),o("\n  "),t("span",{class:"token punctuation"},"}"),o("\n  "),t("span",{class:"token comment"},"// go 类似的语法 range"),o("\n  "),t("span",{class:"token keyword"},"for"),o(" idx"),t("span",{class:"token comment"},"/*索引*/"),t("span",{class:"token punctuation"},","),o(" elem"),t("span",{class:"token comment"},"/*元素*/"),o(),t("span",{class:"token operator"},":="),o(),t("span",{class:"token keyword"},"range"),o(" arr "),t("span",{class:"token punctuation"},"{"),o("\n    fmt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Println"),t("span",{class:"token punctuation"},"("),o("idx"),t("span",{class:"token punctuation"},"."),o(" elem"),t("span",{class:"token punctuation"},")"),o("\n  "),t("span",{class:"token punctuation"},"}"),o("\n  "),t("span",{class:"token comment"},"// 如果我们不关心 idx，可以使用 _ 进行占位"),o("\n  "),t("span",{class:"token keyword"},"for"),o(),t("span",{class:"token boolean"},"_"),t("span",{class:"token punctuation"},","),o(" el "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token keyword"},"range"),o(" arr "),t("span",{class:"token punctuation"},"{"),o("\n    t"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),o("el"),t("span",{class:"token punctuation"},")"),o("\n  "),t("span",{class:"token punctuation"},"}"),o("\n"),t("span",{class:"token punctuation"},"}"),o("\n")])])],-1),t("h3",{id:"数组截取",tabindex:"-1"},[o("数组截取 "),t("a",{class:"header-anchor",href:"#数组截取","aria-hidden":"true"},"#")],-1),t("p",null,"a[开始索引(包含), 结束索引(不包含)]",-1),t("div",{class:"language-go"},[t("pre",null,[t("code",null,[o("a "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token punctuation"},"["),t("span",{class:"token operator"},"..."),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"4"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"5"),t("span",{class:"token punctuation"},"}"),o("\na"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},":"),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},"]"),o(),t("span",{class:"token comment"},"// 2"),o("\na"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},":"),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},"]"),o(),t("span",{class:"token comment"},"// 2, 3"),o("\na"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},":"),t("span",{class:"token function"},"len"),t("span",{class:"token punctuation"},"("),o("a"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"]"),o(),t("span",{class:"token comment"},"// 2, 3, 4, 5"),o("\na"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},":"),t("span",{class:"token punctuation"},"]"),o(),t("span",{class:"token comment"},"// 2, 3, 4, 5"),o("\na"),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},":"),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},"]"),o(),t("span",{class:"token comment"},"// 1, 2, 3"),o("\n")])])],-1),t("p",null,"这个数组的截取使用起来很方便",-1),t("div",{class:"language-go"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"func"),o(),t("span",{class:"token function"},"TestArraySection"),t("span",{class:"token punctuation"},"("),o("t "),t("span",{class:"token operator"},"*"),o("testing"),t("span",{class:"token punctuation"},"."),o("T"),t("span",{class:"token punctuation"},")"),o("  "),t("span",{class:"token punctuation"},"{"),o("\n\tarr3 "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token punctuation"},"["),t("span",{class:"token operator"},"..."),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},","),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},","),t("span",{class:"token number"},"4"),t("span",{class:"token punctuation"},","),t("span",{class:"token number"},"5"),t("span",{class:"token punctuation"},"}"),o("\n\tarr3_sec "),t("span",{class:"token operator"},":="),o(" arr3"),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},":"),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},"]"),o(),t("span",{class:"token comment"},"// 取前 3 个元素"),o("\n  "),t("span",{class:"token comment"},"// arr3_sec := arr3[:-1] // go 不支持使用负数！"),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),o("arr3_sec"),t("span",{class:"token punctuation"},")"),o("\n"),t("span",{class:"token punctuation"},"}"),o("\n")])])],-1),t("h2",{id:"切片",tabindex:"-1"},[o("切片 "),t("a",{class:"header-anchor",href:"#切片","aria-hidden":"true"},"#")],-1),t("h3",{id:"内部结构",tabindex:"-1"},[o("内部结构 "),t("a",{class:"header-anchor",href:"#内部结构","aria-hidden":"true"},"#")],-1),t("p",null,[t("img",{src:"/go-tutorial/assets/golang-slice.5ad319dd.png",alt:"slice"})],-1),t("p",null,"容量 cap 不太好理解，其他编程语言没有这个概念，这个通过一个 🌰 看一下",-1),t("div",{class:"language-go"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"func"),o(),t("span",{class:"token function"},"TestSliceInit"),t("span",{class:"token punctuation"},"("),o("t "),t("span",{class:"token operator"},"*"),o("testing"),t("span",{class:"token punctuation"},"."),o("T"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),o("\n\t"),t("span",{class:"token keyword"},"var"),o(" s0 "),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),o(),t("span",{class:"token comment"},"// 和数组的不同，不用指定长度"),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"len"),t("span",{class:"token punctuation"},"("),o("s0"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token function"},"cap"),t("span",{class:"token punctuation"},"("),o("s0"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),o("\n\n\ts0 "),t("span",{class:"token operator"},"="),o(),t("span",{class:"token function"},"append"),t("span",{class:"token punctuation"},"("),o("s0"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token comment"},"// 添加值"),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"len"),t("span",{class:"token punctuation"},"("),o("s0"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token function"},"cap"),t("span",{class:"token punctuation"},"("),o("s0"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),o("\n\n\ts1 "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"4"),t("span",{class:"token punctuation"},"}"),o(),t("span",{class:"token comment"},"// 初始化"),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"len"),t("span",{class:"token punctuation"},"("),o("s1"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token function"},"cap"),t("span",{class:"token punctuation"},"("),o("s1"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),o("\n\n\ts2 "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token function"},"make"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"5"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token comment"},"// 长度是 3，容量是 5"),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"len"),t("span",{class:"token punctuation"},"("),o("s2"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token function"},"cap"),t("span",{class:"token punctuation"},"("),o("s2"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),o("\n\t"),t("span",{class:"token comment"},"// t.Log(s2[0], s2[1], s2[2], s2[3], s2[4]) // 报错，超过 range 3"),o("\n\n\ts2 "),t("span",{class:"token operator"},"="),o(),t("span",{class:"token function"},"append"),t("span",{class:"token punctuation"},"("),o("s2"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),o("s2"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},","),o(" s2"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},","),o(" s2"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},","),o(" s2"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token comment"},"// 可以访问到 s2[3] 了！"),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"len"),t("span",{class:"token punctuation"},"("),o("s2"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token function"},"cap"),t("span",{class:"token punctuation"},"("),o("s2"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token comment"},"// 4，5"),o("\n"),t("span",{class:"token punctuation"},"}"),o("\n")])])],-1),t("p",null,"声明和初始化和组件很类似，不过可以不用指定数组的长度。cap 代表容量，len 代表可以访问的元素的个数。通过前面的例子这里总结一下",-1),t("div",{class:"language-go"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"var"),o(" s0 "),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),o(),t("span",{class:"token comment"},"// 声明"),o("\ns0 "),t("span",{class:"token operator"},"="),o(),t("span",{class:"token function"},"append"),t("span",{class:"token punctuation"},"("),o("s0"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token comment"},"// 添加元素"),o("\n\ns1 "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},","),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},"}"),o(),t("span",{class:"token comment"},"// 声明并初始化"),o("\n\ns2 "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token function"},"make"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token comment"},"// 声明并设置 len 和 cap。[]type, len, cap，其中 len 个元素会被初始化为默认值，未初始化的元素不可访问"),o("\n")])])],-1),t("h3",{id:"切片的可变长",tabindex:"-1"},[o("切片的可变长 "),t("a",{class:"header-anchor",href:"#切片的可变长","aria-hidden":"true"},"#")],-1),t("div",{class:"language-go"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"func"),o(),t("span",{class:"token function"},"TestSliceGrowing"),t("span",{class:"token punctuation"},"("),o("t "),t("span",{class:"token operator"},"*"),o("testing"),t("span",{class:"token punctuation"},"."),o("T"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),o("\n\ts "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token punctuation"},"}"),o("\n\t"),t("span",{class:"token keyword"},"for"),o(" i "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},";"),o(" i "),t("span",{class:"token operator"},"<"),o(),t("span",{class:"token number"},"10"),t("span",{class:"token punctuation"},";"),o(" i"),t("span",{class:"token operator"},"++"),o(),t("span",{class:"token punctuation"},"{"),o("\n\t\ts "),t("span",{class:"token operator"},"="),o(),t("span",{class:"token function"},"append"),t("span",{class:"token punctuation"},"("),o("s"),t("span",{class:"token punctuation"},","),o(" i"),t("span",{class:"token punctuation"},")"),o("\n\t\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"len"),t("span",{class:"token punctuation"},"("),o("s"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token function"},"cap"),t("span",{class:"token punctuation"},"("),o("s"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),o("\n\t"),t("span",{class:"token punctuation"},"}"),o("\n"),t("span",{class:"token punctuation"},"}"),o("\n"),t("span",{class:"token comment"},"// 1,1"),o("\n"),t("span",{class:"token comment"},"// 2,2"),o("\n"),t("span",{class:"token comment"},"// 3,4"),o("\n"),t("span",{class:"token comment"},"// 4,4"),o("\n"),t("span",{class:"token comment"},"// 5,8"),o("\n"),t("span",{class:"token comment"},"// 6,8"),o("\n"),t("span",{class:"token comment"},"// 7,8"),o("\n"),t("span",{class:"token comment"},"// 8,8"),o("\n"),t("span",{class:"token comment"},"// 9,16"),o("\n"),t("span",{class:"token comment"},"// 10,16"),o("\n")])])],-1),t("p",null,"可以发现，当 cap 不够的时候，它都是按照之前的 cap * 2 来进行增长。",-1),t("h3",{id:"切片共享存储结构",tabindex:"-1"},[o("切片共享存储结构 "),t("a",{class:"header-anchor",href:"#切片共享存储结构","aria-hidden":"true"},"#")],-1),t("p",null,"slice 是一个结构体，指向的是一段连续的存储空间。那是不是可以这样，有多个 slice，它们指向同一块存储空间，如果其中一个修改了，那就会影响到另一个。",-1),t("div",{class:"language-go"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"func"),o(),t("span",{class:"token function"},"TestSliceShareMomery"),t("span",{class:"token punctuation"},"("),o("t "),t("span",{class:"token operator"},"*"),o("testing"),t("span",{class:"token punctuation"},"."),o("T"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),o("\n\tyear "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"string"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token string"},'"Jan"'),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},'"Feb"'),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},'"Mar"'),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},'"Apr"'),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},'"May"'),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},'"Jun"'),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},'"Jul"'),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},'"Aug"'),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},'"Sep"'),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},'"Oct"'),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},'"Nov"'),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},'"Dec"'),t("span",{class:"token punctuation"},"}"),o("\n\tQ2 "),t("span",{class:"token operator"},":="),o(" year"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},":"),t("span",{class:"token number"},"6"),t("span",{class:"token punctuation"},"]"),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),o("Q2"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token function"},"len"),t("span",{class:"token punctuation"},"("),o("Q2"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token function"},"cap"),t("span",{class:"token punctuation"},"("),o("Q2"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),o("\n  "),t("span",{class:"token comment"},"// [Apr May Jun] 3 9"),o("\n  "),t("span",{class:"token comment"},"// 3 比较好理解，cap 等于 9 主要是因为 slice 指向的是连续的存储空间，除了有值的之外，后面还有对应的容量"),o("\n\n\tsummer "),t("span",{class:"token operator"},":="),o(" year"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"5"),t("span",{class:"token punctuation"},":"),t("span",{class:"token number"},"8"),t("span",{class:"token punctuation"},"]"),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),o("summer"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token function"},"len"),t("span",{class:"token punctuation"},"("),o("summer"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token function"},"cap"),t("span",{class:"token punctuation"},"("),o("summer"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),o("\n  "),t("span",{class:"token comment"},"// [Jun Jul Aug] 3 7"),o("\n\n\tsummer"),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},"]"),o(),t("span",{class:"token operator"},"="),o(),t("span",{class:"token string"},'"Unknow"'),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),o("Q2"),t("span",{class:"token punctuation"},")"),o(" \n  "),t("span",{class:"token comment"},"// [Apr May Unknow]"),o("\n  "),t("span",{class:"token comment"},"// 也发生改变了"),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),o("year"),t("span",{class:"token punctuation"},")"),o("\n"),t("span",{class:"token punctuation"},"}"),o("\n")])])],-1),t("p",null,[t("img",{src:"/go-tutorial/assets/golang-slice-share-memory.cba34738.png",alt:"share-memory"})],-1),t("h2",{id:"数组和切片的区别",tabindex:"-1"},[o("数组和切片的区别 "),t("a",{class:"header-anchor",href:"#数组和切片的区别","aria-hidden":"true"},"#")],-1),t("ol",null,[t("li",null,"容量是否可以伸缩"),t("li",null,"是否可以进行比较")],-1),t("p",null,"前面介绍到，只要数组是相同维数和相同长度的，那就可以进行比较。只要每个元素都相等那么数组就是相等的。",-1),t("div",{class:"language-go"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"func"),o(),t("span",{class:"token function"},"TestSliceComparing"),t("span",{class:"token punctuation"},"("),o("t "),t("span",{class:"token operator"},"*"),o("testing"),t("span",{class:"token punctuation"},"."),o("T"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),o("\n\ta "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"4"),t("span",{class:"token punctuation"},"}"),o("\n\tb "),t("span",{class:"token operator"},":="),o(),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token builtin"},"int"),t("span",{class:"token punctuation"},"{"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"3"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token number"},"4"),t("span",{class:"token punctuation"},"}"),o("\n\t"),t("span",{class:"token comment"},"// if a == b { // invalid operation: a == b (slice can only be compared to nil)"),o("\n\t"),t("span",{class:"token comment"},'// \tt.Log("equal")'),o("\n\t"),t("span",{class:"token comment"},"// }"),o("\n\tt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Log"),t("span",{class:"token punctuation"},"("),o("a"),t("span",{class:"token punctuation"},","),o(" b"),t("span",{class:"token punctuation"},")"),o("\n"),t("span",{class:"token punctuation"},"}"),o("\n")])])],-1),t("p",null,[o("可以发现 slice 是不能直接使用 "),t("code",null,"=="),o(" 进行比较的。")],-1)];var u=n(p,[["render",function(n,t,o,c,p,u){return a(),s("div",null,e)}]]);export{c as __pageData,u as default};
