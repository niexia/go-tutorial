import{o as n,c as a,d as s}from"./app.74d4a0b3.js";const p='{"title":"数组和切片","description":"","frontmatter":{},"headers":[{"level":2,"title":"数组的声明","slug":"数组的声明"},{"level":2,"title":"数组元素的遍历","slug":"数组元素的遍历"},{"level":2,"title":"数组截取","slug":"数组截取"},{"level":2,"title":"切片内部结构","slug":"切片内部结构"},{"level":2,"title":"切片共享存储结构","slug":"切片共享存储结构"},{"level":2,"title":"数组和切片的区别","slug":"数组和切片的区别"}],"relativePath":"guide/常见集合/数组和切片.md","lastUpdated":1632067650461}',t={},e=[s('<h1 id="数组和切片" tabindex="-1">数组和切片 <a class="header-anchor" href="#数组和切片" aria-hidden="true">#</a></h1><h2 id="数组的声明" tabindex="-1">数组的声明 <a class="header-anchor" href="#数组的声明" aria-hidden="true">#</a></h2><div class="language-go"><pre><code><span class="token keyword">var</span> a <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token comment">// 声明并初始化为默认零值</span>\na<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>\n\nb <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span> <span class="token comment">// 声明同时初始化</span>\nc <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment">// 多维数组初始化</span>\n</code></pre></div><h2 id="数组元素的遍历" tabindex="-1">数组元素的遍历 <a class="header-anchor" href="#数组元素的遍历" aria-hidden="true">#</a></h2><p>与其他主要编程语言的差异</p><div class="language-go"><pre><code><span class="token keyword">func</span> <span class="token function">TestTravelArray</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  arr <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span> <span class="token comment">// 不指定元素个数</span>\n  <span class="token keyword">for</span> idx<span class="token comment">/*索引*/</span><span class="token punctuation">,</span> elem<span class="token comment">/*元素*/</span> <span class="token operator">:=</span> <span class="token keyword">range</span> arr <span class="token punctuation">{</span>\n    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>idx<span class="token punctuation">.</span> elem<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="数组截取" tabindex="-1">数组截取 <a class="header-anchor" href="#数组截取" aria-hidden="true">#</a></h2><p>a[开始索引(包含), 结束索引(不包含)]</p><div class="language-go"><pre><code>a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>\na<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment">// 2</span>\na<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment">// 2, 3</span>\na<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// 2, 3, 4, 5</span>\na<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// 2, 3, 4, 5</span>\na<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment">// 1, 2, 3</span>\n</code></pre></div><h2 id="切片内部结构" tabindex="-1">切片内部结构 <a class="header-anchor" href="#切片内部结构" aria-hidden="true">#</a></h2><h2 id="切片共享存储结构" tabindex="-1">切片共享存储结构 <a class="header-anchor" href="#切片共享存储结构" aria-hidden="true">#</a></h2><h2 id="数组和切片的区别" tabindex="-1">数组和切片的区别 <a class="header-anchor" href="#数组和切片的区别" aria-hidden="true">#</a></h2><ol><li>容量是否可以伸缩</li><li>是否可以进行比较</li></ol>',13)];t.render=function(s,p,t,o,c,u){return n(),a("div",null,e)};export{p as __pageData,t as default};
